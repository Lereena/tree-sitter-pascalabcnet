==================
Module
==================

Program prog;
begin
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (end))
  (dot))


==================
While statement
==================
Program prog;
begin
    while true do
    begin
        a := 0
    end
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (statement_sequence
      (while_statement
        (true)
        (block_statement
          (begin)
          (statement_sequence
            (assignment
              (identifier)
              (integer)))
          (end))))
    (end))
  (dot))


==================
For statement
==================
Program prog;
begin
    for x := 0 to 1 step 1 do
    begin
        a := 0
    end
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (statement_sequence
      (for_statement
        (identifier)
        (integer)
        (integer)
        (integer)
        (block_statement
          (begin)
          (statement_sequence
            (assignment
              (identifier)
              (integer)))
          (end))))
    (end))
  (dot))


==================
Procedure call statement
==================
Program prog;
begin
proc(a)
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (statement_sequence
      (procedure_call_statement
        (identifier)
        (left_paren)
        (fact_params
          (identifier))
        (right_paren)))
    (end))
  (dot))


==================
Long if statement
==================

Program prog;
begin
    if true
    then a := 1
    else a := 2
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (statement_sequence
      (if_statement
        (true)
        (assignment
          (identifier)
          (integer))
        (assignment
          (identifier)
          (integer))))
    (end))
  (dot))


==================
Short if statement
==================

Program prog;
begin
    if true
    then a := 1
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (statement_sequence
      (if_statement
        (true)
        (assignment
          (identifier)
          (integer))))
    (end))
  (dot))

==================
Many statements
==================

Program prog;
begin
    proc(a);
    for x := 0 to 1 step 1 do
    begin
        a := 0
    end;
    while true do
    begin
        a := 0
    end
end.

---

(module
  (identifier)
  (semicolon)
  (mainblock
    (begin)
    (statement_sequence
      (statement_sequence
        (statement_sequence
          (procedure_call_statement
            (identifier)
            (left_paren)
            (fact_params
              (identifier))
            (right_paren)))
        (semicolon)
        (for_statement
          (identifier)
          (integer)
          (integer)
          (integer)
          (block_statement
            (begin)
            (statement_sequence
              (assignment
                (identifier)
                (integer)))
            (end))))
      (semicolon)
      (while_statement
        (true)
        (block_statement
          (begin)
          (statement_sequence
            (assignment
              (identifier)
              (integer)))
          (end))))
    (end))
  (dot))

